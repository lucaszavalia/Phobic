Terminals unused in grammar

    PAR
    FAPP
    SEND
    RECEIVE
    SIL


Grammar

    0 $accept: program $end

    1 program: prog
    2        | definitions

    3 prog: LBPAR DEFMACRO VAR vdef RBPAR LSPAR pcalc RSPAR prog
    4     | pcalc

    5 definitions: LBPAR DEFMACRO VAR vdef RBPAR LSPAR pcalc RSPAR definitions
    6            | LBPAR DEFMACRO VAR vdef RBPAR LSPAR pcalc RSPAR

    7 pcalc: VAR LAPAR vterm RAPAR PERIOD pcalc
    8      | VAR LRPAR vterm RRPAR PERIOD pcalc
    9      | SILENT PERIOD pcalc
   10      | LBPAR IF comp RBPAR LSPAR pcalc RSPAR PERIOD pcalc
   11      | LBPAR NEW vdef RBPAR LSPAR pcalc RSPAR
   12      | LBPAR VAR RBPAR LSPAR vterm RSPAR PERIOD pcalc
   13      | pcalc PARALLEL pcalc
   14      | pcalc DISJOIN pcalc
   15      | pcalc DISJOIN LSPAR term RSPAR pcalc
   16      | REPLICATE pcalc
   17      | STOP

   18 vterm: varterm COMMA vterm
   19      | varterm

   20 varterm: term
   21        | pcalc

   22 comp: varterm EQ varterm
   23     | varterm NEQ varterm

   24 term: term ADD term
   25     | term SUB term
   26     | term MUL term
   27     | term DIV term
   28     | term MOD term
   29     | term AND term
   30     | term OR term
   31     | LRPAR term RRPAR
   32     | NOT term
   33     | terminal

   34 terminal: INT
   35         | FLOAT
   36         | TRUE
   37         | FALSE
   38         | CHAR
   39         | STRING
   40         | VAR

   41 vdef: vardef COMMA vdef
   42     | vardef

   43 vardef: VAR COLON type

   44 type: btype BSLASH type
   45     | btype

   46 btype: INT_T
   47      | FLOAT_T
   48      | BOOL_T
   49      | CHAR_T
   50      | STRING_T
   51      | PROC_T


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    LAPAR <var> (258) 7
    RAPAR <var> (259) 7
    LRPAR <var> (260) 8 31
    RRPAR <var> (261) 8 31
    LBPAR <var> (262) 3 5 6 10 11 12
    RBPAR <var> (263) 3 5 6 10 11 12
    LSPAR <var> (264) 3 5 6 10 11 12 15
    RSPAR <var> (265) 3 5 6 10 11 12 15
    PERIOD <var> (266) 7 8 9 10 12
    COMMA <var> (267) 18 41
    COLON <var> (268) 43
    BSLASH <var> (269) 44
    DEFMACRO <var> (270) 3 5 6
    SILENT <var> (271) 9
    IF <var> (272) 10
    NEW <var> (273) 11
    PARALLEL <var> (274) 13
    DISJOIN <var> (275) 14 15
    REPLICATE <var> (276) 16
    STOP <var> (277) 17
    ADD <var> (278) 24
    SUB <var> (279) 25
    MUL <var> (280) 26
    DIV <var> (281) 27
    MOD <var> (282) 28
    NOT <var> (283) 32
    OR <var> (284) 30
    AND <var> (285) 29
    EQ <var> (286) 22
    NEQ <var> (287) 23
    TRUE <var> (288) 36
    FALSE <var> (289) 37
    INT_T <var> (290) 46
    FLOAT_T <var> (291) 47
    BOOL_T <var> (292) 48
    CHAR_T <var> (293) 49
    STRING_T <var> (294) 50
    PROC_T <var> (295) 51
    INT <var> (296) 34
    FLOAT <var> (297) 35
    VAR <var> (298) 3 5 6 7 8 12 40 43
    CHAR <var> (299) 38
    STRING <var> (300) 39
    PAR <var> (301)
    FAPP <var> (302)
    SEND <var> (303)
    RECEIVE <var> (304)
    NEG (305)
    REP (306)
    SIL (307)
    SND (308)
    RCV (309)
    FAP (310)
    PDJ (311)
    IFF (312)


Nonterminals, with rules where they appear

    $accept (58)
        on left: 0
    program <ptree> (59)
        on left: 1 2
        on right: 0
    prog <ptree> (60)
        on left: 3 4
        on right: 1 3
    definitions <ptree> (61)
        on left: 5 6
        on right: 2 5
    pcalc <ptree> (62)
        on left: 7 8 9 10 11 12 13 14 15 16 17
        on right: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 21
    vterm <ptree> (63)
        on left: 18 19
        on right: 7 8 12 18
    varterm <ptree> (64)
        on left: 20 21
        on right: 18 19 22 23
    comp <ptree> (65)
        on left: 22 23
        on right: 10
    term <ptree> (66)
        on left: 24 25 26 27 28 29 30 31 32 33
        on right: 15 20 24 25 26 27 28 29 30 31 32
    terminal <ptree> (67)
        on left: 34 35 36 37 38 39 40
        on right: 33
    vdef <ptree> (68)
        on left: 41 42
        on right: 3 5 6 11 41
    vardef <ptree> (69)
        on left: 43
        on right: 41 42
    type <ptree> (70)
        on left: 44 45
        on right: 43 44
    btype <ptree> (71)
        on left: 46 47 48 49 50 51
        on right: 44 45


State 0

    0 $accept: • program $end

    LBPAR      shift, and go to state 1
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    VAR        shift, and go to state 5

    program      go to state 6
    prog         go to state 7
    definitions  go to state 8
    pcalc        go to state 9


State 1

    3 prog: LBPAR • DEFMACRO VAR vdef RBPAR LSPAR pcalc RSPAR prog
    5 definitions: LBPAR • DEFMACRO VAR vdef RBPAR LSPAR pcalc RSPAR definitions
    6            | LBPAR • DEFMACRO VAR vdef RBPAR LSPAR pcalc RSPAR
   10 pcalc: LBPAR • IF comp RBPAR LSPAR pcalc RSPAR PERIOD pcalc
   11      | LBPAR • NEW vdef RBPAR LSPAR pcalc RSPAR
   12      | LBPAR • VAR RBPAR LSPAR vterm RSPAR PERIOD pcalc

    DEFMACRO  shift, and go to state 10
    IF        shift, and go to state 11
    NEW       shift, and go to state 12
    VAR       shift, and go to state 13


State 2

    9 pcalc: SILENT • PERIOD pcalc

    PERIOD  shift, and go to state 14


State 3

   16 pcalc: REPLICATE • pcalc

    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    VAR        shift, and go to state 5

    pcalc  go to state 16


State 4

   17 pcalc: STOP •

    $default  reduce using rule 17 (pcalc)


State 5

    7 pcalc: VAR • LAPAR vterm RAPAR PERIOD pcalc
    8      | VAR • LRPAR vterm RRPAR PERIOD pcalc

    LAPAR  shift, and go to state 17
    LRPAR  shift, and go to state 18


State 6

    0 $accept: program • $end

    $end  shift, and go to state 19


State 7

    1 program: prog •

    $default  reduce using rule 1 (program)


State 8

    2 program: definitions •

    $default  reduce using rule 2 (program)


State 9

    4 prog: pcalc •
   13 pcalc: pcalc • PARALLEL pcalc
   14      | pcalc • DISJOIN pcalc
   15      | pcalc • DISJOIN LSPAR term RSPAR pcalc

    PARALLEL  shift, and go to state 20
    DISJOIN   shift, and go to state 21

    $default  reduce using rule 4 (prog)


State 10

    3 prog: LBPAR DEFMACRO • VAR vdef RBPAR LSPAR pcalc RSPAR prog
    5 definitions: LBPAR DEFMACRO • VAR vdef RBPAR LSPAR pcalc RSPAR definitions
    6            | LBPAR DEFMACRO • VAR vdef RBPAR LSPAR pcalc RSPAR

    VAR  shift, and go to state 22


State 11

   10 pcalc: LBPAR IF • comp RBPAR LSPAR pcalc RSPAR PERIOD pcalc

    LRPAR      shift, and go to state 23
    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    NOT        shift, and go to state 24
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    INT        shift, and go to state 27
    FLOAT      shift, and go to state 28
    VAR        shift, and go to state 29
    CHAR       shift, and go to state 30
    STRING     shift, and go to state 31

    pcalc     go to state 32
    varterm   go to state 33
    comp      go to state 34
    term      go to state 35
    terminal  go to state 36


State 12

   11 pcalc: LBPAR NEW • vdef RBPAR LSPAR pcalc RSPAR

    VAR  shift, and go to state 37

    vdef    go to state 38
    vardef  go to state 39


State 13

   12 pcalc: LBPAR VAR • RBPAR LSPAR vterm RSPAR PERIOD pcalc

    RBPAR  shift, and go to state 40


State 14

    9 pcalc: SILENT PERIOD • pcalc

    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    VAR        shift, and go to state 5

    pcalc  go to state 41


State 15

   10 pcalc: LBPAR • IF comp RBPAR LSPAR pcalc RSPAR PERIOD pcalc
   11      | LBPAR • NEW vdef RBPAR LSPAR pcalc RSPAR
   12      | LBPAR • VAR RBPAR LSPAR vterm RSPAR PERIOD pcalc

    IF   shift, and go to state 11
    NEW  shift, and go to state 12
    VAR  shift, and go to state 13


State 16

   13 pcalc: pcalc • PARALLEL pcalc
   14      | pcalc • DISJOIN pcalc
   15      | pcalc • DISJOIN LSPAR term RSPAR pcalc
   16      | REPLICATE pcalc •

    $default  reduce using rule 16 (pcalc)


State 17

    7 pcalc: VAR LAPAR • vterm RAPAR PERIOD pcalc

    LRPAR      shift, and go to state 23
    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    NOT        shift, and go to state 24
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    INT        shift, and go to state 27
    FLOAT      shift, and go to state 28
    VAR        shift, and go to state 29
    CHAR       shift, and go to state 30
    STRING     shift, and go to state 31

    pcalc     go to state 32
    vterm     go to state 42
    varterm   go to state 43
    term      go to state 35
    terminal  go to state 36


State 18

    8 pcalc: VAR LRPAR • vterm RRPAR PERIOD pcalc

    LRPAR      shift, and go to state 23
    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    NOT        shift, and go to state 24
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    INT        shift, and go to state 27
    FLOAT      shift, and go to state 28
    VAR        shift, and go to state 29
    CHAR       shift, and go to state 30
    STRING     shift, and go to state 31

    pcalc     go to state 32
    vterm     go to state 44
    varterm   go to state 43
    term      go to state 35
    terminal  go to state 36


State 19

    0 $accept: program $end •

    $default  accept


State 20

   13 pcalc: pcalc PARALLEL • pcalc

    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    VAR        shift, and go to state 5

    pcalc  go to state 45


State 21

   14 pcalc: pcalc DISJOIN • pcalc
   15      | pcalc DISJOIN • LSPAR term RSPAR pcalc

    LBPAR      shift, and go to state 15
    LSPAR      shift, and go to state 46
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    VAR        shift, and go to state 5

    pcalc  go to state 47


State 22

    3 prog: LBPAR DEFMACRO VAR • vdef RBPAR LSPAR pcalc RSPAR prog
    5 definitions: LBPAR DEFMACRO VAR • vdef RBPAR LSPAR pcalc RSPAR definitions
    6            | LBPAR DEFMACRO VAR • vdef RBPAR LSPAR pcalc RSPAR

    VAR  shift, and go to state 37

    vdef    go to state 48
    vardef  go to state 39


State 23

   31 term: LRPAR • term RRPAR

    LRPAR   shift, and go to state 23
    NOT     shift, and go to state 24
    TRUE    shift, and go to state 25
    FALSE   shift, and go to state 26
    INT     shift, and go to state 27
    FLOAT   shift, and go to state 28
    VAR     shift, and go to state 49
    CHAR    shift, and go to state 30
    STRING  shift, and go to state 31

    term      go to state 50
    terminal  go to state 36


State 24

   32 term: NOT • term

    LRPAR   shift, and go to state 23
    NOT     shift, and go to state 24
    TRUE    shift, and go to state 25
    FALSE   shift, and go to state 26
    INT     shift, and go to state 27
    FLOAT   shift, and go to state 28
    VAR     shift, and go to state 49
    CHAR    shift, and go to state 30
    STRING  shift, and go to state 31

    term      go to state 51
    terminal  go to state 36


State 25

   36 terminal: TRUE •

    $default  reduce using rule 36 (terminal)


State 26

   37 terminal: FALSE •

    $default  reduce using rule 37 (terminal)


State 27

   34 terminal: INT •

    $default  reduce using rule 34 (terminal)


State 28

   35 terminal: FLOAT •

    $default  reduce using rule 35 (terminal)


State 29

    7 pcalc: VAR • LAPAR vterm RAPAR PERIOD pcalc
    8      | VAR • LRPAR vterm RRPAR PERIOD pcalc
   40 terminal: VAR •

    LAPAR  shift, and go to state 17
    LRPAR  shift, and go to state 18

    $default  reduce using rule 40 (terminal)


State 30

   38 terminal: CHAR •

    $default  reduce using rule 38 (terminal)


State 31

   39 terminal: STRING •

    $default  reduce using rule 39 (terminal)


State 32

   13 pcalc: pcalc • PARALLEL pcalc
   14      | pcalc • DISJOIN pcalc
   15      | pcalc • DISJOIN LSPAR term RSPAR pcalc
   21 varterm: pcalc •

    PARALLEL  shift, and go to state 20
    DISJOIN   shift, and go to state 21

    $default  reduce using rule 21 (varterm)


State 33

   22 comp: varterm • EQ varterm
   23     | varterm • NEQ varterm

    EQ   shift, and go to state 52
    NEQ  shift, and go to state 53


State 34

   10 pcalc: LBPAR IF comp • RBPAR LSPAR pcalc RSPAR PERIOD pcalc

    RBPAR  shift, and go to state 54


State 35

   20 varterm: term •
   24 term: term • ADD term
   25     | term • SUB term
   26     | term • MUL term
   27     | term • DIV term
   28     | term • MOD term
   29     | term • AND term
   30     | term • OR term

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56
    MUL  shift, and go to state 57
    DIV  shift, and go to state 58
    MOD  shift, and go to state 59
    OR   shift, and go to state 60
    AND  shift, and go to state 61

    $default  reduce using rule 20 (varterm)


State 36

   33 term: terminal •

    $default  reduce using rule 33 (term)


State 37

   43 vardef: VAR • COLON type

    COLON  shift, and go to state 62


State 38

   11 pcalc: LBPAR NEW vdef • RBPAR LSPAR pcalc RSPAR

    RBPAR  shift, and go to state 63


State 39

   41 vdef: vardef • COMMA vdef
   42     | vardef •

    COMMA  shift, and go to state 64

    $default  reduce using rule 42 (vdef)


State 40

   12 pcalc: LBPAR VAR RBPAR • LSPAR vterm RSPAR PERIOD pcalc

    LSPAR  shift, and go to state 65


State 41

    9 pcalc: SILENT PERIOD pcalc •
   13      | pcalc • PARALLEL pcalc
   14      | pcalc • DISJOIN pcalc
   15      | pcalc • DISJOIN LSPAR term RSPAR pcalc

    $default  reduce using rule 9 (pcalc)


State 42

    7 pcalc: VAR LAPAR vterm • RAPAR PERIOD pcalc

    RAPAR  shift, and go to state 66


State 43

   18 vterm: varterm • COMMA vterm
   19      | varterm •

    COMMA  shift, and go to state 67

    $default  reduce using rule 19 (vterm)


State 44

    8 pcalc: VAR LRPAR vterm • RRPAR PERIOD pcalc

    RRPAR  shift, and go to state 68


State 45

   13 pcalc: pcalc • PARALLEL pcalc
   13      | pcalc PARALLEL pcalc •
   14      | pcalc • DISJOIN pcalc
   15      | pcalc • DISJOIN LSPAR term RSPAR pcalc

    DISJOIN  shift, and go to state 21

    $default  reduce using rule 13 (pcalc)


State 46

   15 pcalc: pcalc DISJOIN LSPAR • term RSPAR pcalc

    LRPAR   shift, and go to state 23
    NOT     shift, and go to state 24
    TRUE    shift, and go to state 25
    FALSE   shift, and go to state 26
    INT     shift, and go to state 27
    FLOAT   shift, and go to state 28
    VAR     shift, and go to state 49
    CHAR    shift, and go to state 30
    STRING  shift, and go to state 31

    term      go to state 69
    terminal  go to state 36


State 47

   13 pcalc: pcalc • PARALLEL pcalc
   14      | pcalc • DISJOIN pcalc
   14      | pcalc DISJOIN pcalc •
   15      | pcalc • DISJOIN LSPAR term RSPAR pcalc

    $default  reduce using rule 14 (pcalc)


State 48

    3 prog: LBPAR DEFMACRO VAR vdef • RBPAR LSPAR pcalc RSPAR prog
    5 definitions: LBPAR DEFMACRO VAR vdef • RBPAR LSPAR pcalc RSPAR definitions
    6            | LBPAR DEFMACRO VAR vdef • RBPAR LSPAR pcalc RSPAR

    RBPAR  shift, and go to state 70


State 49

   40 terminal: VAR •

    $default  reduce using rule 40 (terminal)


State 50

   24 term: term • ADD term
   25     | term • SUB term
   26     | term • MUL term
   27     | term • DIV term
   28     | term • MOD term
   29     | term • AND term
   30     | term • OR term
   31     | LRPAR term • RRPAR

    RRPAR  shift, and go to state 71
    ADD    shift, and go to state 55
    SUB    shift, and go to state 56
    MUL    shift, and go to state 57
    DIV    shift, and go to state 58
    MOD    shift, and go to state 59
    OR     shift, and go to state 60
    AND    shift, and go to state 61


State 51

   24 term: term • ADD term
   25     | term • SUB term
   26     | term • MUL term
   27     | term • DIV term
   28     | term • MOD term
   29     | term • AND term
   30     | term • OR term
   32     | NOT term •

    $default  reduce using rule 32 (term)


State 52

   22 comp: varterm EQ • varterm

    LRPAR      shift, and go to state 23
    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    NOT        shift, and go to state 24
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    INT        shift, and go to state 27
    FLOAT      shift, and go to state 28
    VAR        shift, and go to state 29
    CHAR       shift, and go to state 30
    STRING     shift, and go to state 31

    pcalc     go to state 32
    varterm   go to state 72
    term      go to state 35
    terminal  go to state 36


State 53

   23 comp: varterm NEQ • varterm

    LRPAR      shift, and go to state 23
    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    NOT        shift, and go to state 24
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    INT        shift, and go to state 27
    FLOAT      shift, and go to state 28
    VAR        shift, and go to state 29
    CHAR       shift, and go to state 30
    STRING     shift, and go to state 31

    pcalc     go to state 32
    varterm   go to state 73
    term      go to state 35
    terminal  go to state 36


State 54

   10 pcalc: LBPAR IF comp RBPAR • LSPAR pcalc RSPAR PERIOD pcalc

    LSPAR  shift, and go to state 74


State 55

   24 term: term ADD • term

    LRPAR   shift, and go to state 23
    NOT     shift, and go to state 24
    TRUE    shift, and go to state 25
    FALSE   shift, and go to state 26
    INT     shift, and go to state 27
    FLOAT   shift, and go to state 28
    VAR     shift, and go to state 49
    CHAR    shift, and go to state 30
    STRING  shift, and go to state 31

    term      go to state 75
    terminal  go to state 36


State 56

   25 term: term SUB • term

    LRPAR   shift, and go to state 23
    NOT     shift, and go to state 24
    TRUE    shift, and go to state 25
    FALSE   shift, and go to state 26
    INT     shift, and go to state 27
    FLOAT   shift, and go to state 28
    VAR     shift, and go to state 49
    CHAR    shift, and go to state 30
    STRING  shift, and go to state 31

    term      go to state 76
    terminal  go to state 36


State 57

   26 term: term MUL • term

    LRPAR   shift, and go to state 23
    NOT     shift, and go to state 24
    TRUE    shift, and go to state 25
    FALSE   shift, and go to state 26
    INT     shift, and go to state 27
    FLOAT   shift, and go to state 28
    VAR     shift, and go to state 49
    CHAR    shift, and go to state 30
    STRING  shift, and go to state 31

    term      go to state 77
    terminal  go to state 36


State 58

   27 term: term DIV • term

    LRPAR   shift, and go to state 23
    NOT     shift, and go to state 24
    TRUE    shift, and go to state 25
    FALSE   shift, and go to state 26
    INT     shift, and go to state 27
    FLOAT   shift, and go to state 28
    VAR     shift, and go to state 49
    CHAR    shift, and go to state 30
    STRING  shift, and go to state 31

    term      go to state 78
    terminal  go to state 36


State 59

   28 term: term MOD • term

    LRPAR   shift, and go to state 23
    NOT     shift, and go to state 24
    TRUE    shift, and go to state 25
    FALSE   shift, and go to state 26
    INT     shift, and go to state 27
    FLOAT   shift, and go to state 28
    VAR     shift, and go to state 49
    CHAR    shift, and go to state 30
    STRING  shift, and go to state 31

    term      go to state 79
    terminal  go to state 36


State 60

   30 term: term OR • term

    LRPAR   shift, and go to state 23
    NOT     shift, and go to state 24
    TRUE    shift, and go to state 25
    FALSE   shift, and go to state 26
    INT     shift, and go to state 27
    FLOAT   shift, and go to state 28
    VAR     shift, and go to state 49
    CHAR    shift, and go to state 30
    STRING  shift, and go to state 31

    term      go to state 80
    terminal  go to state 36


State 61

   29 term: term AND • term

    LRPAR   shift, and go to state 23
    NOT     shift, and go to state 24
    TRUE    shift, and go to state 25
    FALSE   shift, and go to state 26
    INT     shift, and go to state 27
    FLOAT   shift, and go to state 28
    VAR     shift, and go to state 49
    CHAR    shift, and go to state 30
    STRING  shift, and go to state 31

    term      go to state 81
    terminal  go to state 36


State 62

   43 vardef: VAR COLON • type

    INT_T     shift, and go to state 82
    FLOAT_T   shift, and go to state 83
    BOOL_T    shift, and go to state 84
    CHAR_T    shift, and go to state 85
    STRING_T  shift, and go to state 86
    PROC_T    shift, and go to state 87

    type   go to state 88
    btype  go to state 89


State 63

   11 pcalc: LBPAR NEW vdef RBPAR • LSPAR pcalc RSPAR

    LSPAR  shift, and go to state 90


State 64

   41 vdef: vardef COMMA • vdef

    VAR  shift, and go to state 37

    vdef    go to state 91
    vardef  go to state 39


State 65

   12 pcalc: LBPAR VAR RBPAR LSPAR • vterm RSPAR PERIOD pcalc

    LRPAR      shift, and go to state 23
    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    NOT        shift, and go to state 24
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    INT        shift, and go to state 27
    FLOAT      shift, and go to state 28
    VAR        shift, and go to state 29
    CHAR       shift, and go to state 30
    STRING     shift, and go to state 31

    pcalc     go to state 32
    vterm     go to state 92
    varterm   go to state 43
    term      go to state 35
    terminal  go to state 36


State 66

    7 pcalc: VAR LAPAR vterm RAPAR • PERIOD pcalc

    PERIOD  shift, and go to state 93


State 67

   18 vterm: varterm COMMA • vterm

    LRPAR      shift, and go to state 23
    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    NOT        shift, and go to state 24
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    INT        shift, and go to state 27
    FLOAT      shift, and go to state 28
    VAR        shift, and go to state 29
    CHAR       shift, and go to state 30
    STRING     shift, and go to state 31

    pcalc     go to state 32
    vterm     go to state 94
    varterm   go to state 43
    term      go to state 35
    terminal  go to state 36


State 68

    8 pcalc: VAR LRPAR vterm RRPAR • PERIOD pcalc

    PERIOD  shift, and go to state 95


State 69

   15 pcalc: pcalc DISJOIN LSPAR term • RSPAR pcalc
   24 term: term • ADD term
   25     | term • SUB term
   26     | term • MUL term
   27     | term • DIV term
   28     | term • MOD term
   29     | term • AND term
   30     | term • OR term

    RSPAR  shift, and go to state 96
    ADD    shift, and go to state 55
    SUB    shift, and go to state 56
    MUL    shift, and go to state 57
    DIV    shift, and go to state 58
    MOD    shift, and go to state 59
    OR     shift, and go to state 60
    AND    shift, and go to state 61


State 70

    3 prog: LBPAR DEFMACRO VAR vdef RBPAR • LSPAR pcalc RSPAR prog
    5 definitions: LBPAR DEFMACRO VAR vdef RBPAR • LSPAR pcalc RSPAR definitions
    6            | LBPAR DEFMACRO VAR vdef RBPAR • LSPAR pcalc RSPAR

    LSPAR  shift, and go to state 97


State 71

   31 term: LRPAR term RRPAR •

    $default  reduce using rule 31 (term)


State 72

   22 comp: varterm EQ varterm •

    $default  reduce using rule 22 (comp)


State 73

   23 comp: varterm NEQ varterm •

    $default  reduce using rule 23 (comp)


State 74

   10 pcalc: LBPAR IF comp RBPAR LSPAR • pcalc RSPAR PERIOD pcalc

    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    VAR        shift, and go to state 5

    pcalc  go to state 98


State 75

   24 term: term • ADD term
   24     | term ADD term •
   25     | term • SUB term
   26     | term • MUL term
   27     | term • DIV term
   28     | term • MOD term
   29     | term • AND term
   30     | term • OR term

    SUB  shift, and go to state 56
    MUL  shift, and go to state 57
    DIV  shift, and go to state 58
    MOD  shift, and go to state 59
    OR   shift, and go to state 60
    AND  shift, and go to state 61

    $default  reduce using rule 24 (term)


State 76

   24 term: term • ADD term
   25     | term • SUB term
   25     | term SUB term •
   26     | term • MUL term
   27     | term • DIV term
   28     | term • MOD term
   29     | term • AND term
   30     | term • OR term

    MUL  shift, and go to state 57
    DIV  shift, and go to state 58
    MOD  shift, and go to state 59
    OR   shift, and go to state 60
    AND  shift, and go to state 61

    $default  reduce using rule 25 (term)


State 77

   24 term: term • ADD term
   25     | term • SUB term
   26     | term • MUL term
   26     | term MUL term •
   27     | term • DIV term
   28     | term • MOD term
   29     | term • AND term
   30     | term • OR term

    DIV  shift, and go to state 58
    MOD  shift, and go to state 59
    OR   shift, and go to state 60
    AND  shift, and go to state 61

    $default  reduce using rule 26 (term)


State 78

   24 term: term • ADD term
   25     | term • SUB term
   26     | term • MUL term
   27     | term • DIV term
   27     | term DIV term •
   28     | term • MOD term
   29     | term • AND term
   30     | term • OR term

    MOD  shift, and go to state 59
    OR   shift, and go to state 60
    AND  shift, and go to state 61

    $default  reduce using rule 27 (term)


State 79

   24 term: term • ADD term
   25     | term • SUB term
   26     | term • MUL term
   27     | term • DIV term
   28     | term • MOD term
   28     | term MOD term •
   29     | term • AND term
   30     | term • OR term

    OR   shift, and go to state 60
    AND  shift, and go to state 61

    $default  reduce using rule 28 (term)


State 80

   24 term: term • ADD term
   25     | term • SUB term
   26     | term • MUL term
   27     | term • DIV term
   28     | term • MOD term
   29     | term • AND term
   30     | term • OR term
   30     | term OR term •

    $default  reduce using rule 30 (term)


State 81

   24 term: term • ADD term
   25     | term • SUB term
   26     | term • MUL term
   27     | term • DIV term
   28     | term • MOD term
   29     | term • AND term
   29     | term AND term •
   30     | term • OR term

    OR  shift, and go to state 60

    $default  reduce using rule 29 (term)


State 82

   46 btype: INT_T •

    $default  reduce using rule 46 (btype)


State 83

   47 btype: FLOAT_T •

    $default  reduce using rule 47 (btype)


State 84

   48 btype: BOOL_T •

    $default  reduce using rule 48 (btype)


State 85

   49 btype: CHAR_T •

    $default  reduce using rule 49 (btype)


State 86

   50 btype: STRING_T •

    $default  reduce using rule 50 (btype)


State 87

   51 btype: PROC_T •

    $default  reduce using rule 51 (btype)


State 88

   43 vardef: VAR COLON type •

    $default  reduce using rule 43 (vardef)


State 89

   44 type: btype • BSLASH type
   45     | btype •

    BSLASH  shift, and go to state 99

    $default  reduce using rule 45 (type)


State 90

   11 pcalc: LBPAR NEW vdef RBPAR LSPAR • pcalc RSPAR

    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    VAR        shift, and go to state 5

    pcalc  go to state 100


State 91

   41 vdef: vardef COMMA vdef •

    $default  reduce using rule 41 (vdef)


State 92

   12 pcalc: LBPAR VAR RBPAR LSPAR vterm • RSPAR PERIOD pcalc

    RSPAR  shift, and go to state 101


State 93

    7 pcalc: VAR LAPAR vterm RAPAR PERIOD • pcalc

    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    VAR        shift, and go to state 5

    pcalc  go to state 102


State 94

   18 vterm: varterm COMMA vterm •

    $default  reduce using rule 18 (vterm)


State 95

    8 pcalc: VAR LRPAR vterm RRPAR PERIOD • pcalc

    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    VAR        shift, and go to state 5

    pcalc  go to state 103


State 96

   15 pcalc: pcalc DISJOIN LSPAR term RSPAR • pcalc

    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    VAR        shift, and go to state 5

    pcalc  go to state 104


State 97

    3 prog: LBPAR DEFMACRO VAR vdef RBPAR LSPAR • pcalc RSPAR prog
    5 definitions: LBPAR DEFMACRO VAR vdef RBPAR LSPAR • pcalc RSPAR definitions
    6            | LBPAR DEFMACRO VAR vdef RBPAR LSPAR • pcalc RSPAR

    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    VAR        shift, and go to state 5

    pcalc  go to state 105


State 98

   10 pcalc: LBPAR IF comp RBPAR LSPAR pcalc • RSPAR PERIOD pcalc
   13      | pcalc • PARALLEL pcalc
   14      | pcalc • DISJOIN pcalc
   15      | pcalc • DISJOIN LSPAR term RSPAR pcalc

    RSPAR     shift, and go to state 106
    PARALLEL  shift, and go to state 20
    DISJOIN   shift, and go to state 21


State 99

   44 type: btype BSLASH • type

    INT_T     shift, and go to state 82
    FLOAT_T   shift, and go to state 83
    BOOL_T    shift, and go to state 84
    CHAR_T    shift, and go to state 85
    STRING_T  shift, and go to state 86
    PROC_T    shift, and go to state 87

    type   go to state 107
    btype  go to state 89


State 100

   11 pcalc: LBPAR NEW vdef RBPAR LSPAR pcalc • RSPAR
   13      | pcalc • PARALLEL pcalc
   14      | pcalc • DISJOIN pcalc
   15      | pcalc • DISJOIN LSPAR term RSPAR pcalc

    RSPAR     shift, and go to state 108
    PARALLEL  shift, and go to state 20
    DISJOIN   shift, and go to state 21


State 101

   12 pcalc: LBPAR VAR RBPAR LSPAR vterm RSPAR • PERIOD pcalc

    PERIOD  shift, and go to state 109


State 102

    7 pcalc: VAR LAPAR vterm RAPAR PERIOD pcalc •
   13      | pcalc • PARALLEL pcalc
   14      | pcalc • DISJOIN pcalc
   15      | pcalc • DISJOIN LSPAR term RSPAR pcalc

    $default  reduce using rule 7 (pcalc)


State 103

    8 pcalc: VAR LRPAR vterm RRPAR PERIOD pcalc •
   13      | pcalc • PARALLEL pcalc
   14      | pcalc • DISJOIN pcalc
   15      | pcalc • DISJOIN LSPAR term RSPAR pcalc

    $default  reduce using rule 8 (pcalc)


State 104

   13 pcalc: pcalc • PARALLEL pcalc
   14      | pcalc • DISJOIN pcalc
   15      | pcalc • DISJOIN LSPAR term RSPAR pcalc
   15      | pcalc DISJOIN LSPAR term RSPAR pcalc •

    $default  reduce using rule 15 (pcalc)


State 105

    3 prog: LBPAR DEFMACRO VAR vdef RBPAR LSPAR pcalc • RSPAR prog
    5 definitions: LBPAR DEFMACRO VAR vdef RBPAR LSPAR pcalc • RSPAR definitions
    6            | LBPAR DEFMACRO VAR vdef RBPAR LSPAR pcalc • RSPAR
   13 pcalc: pcalc • PARALLEL pcalc
   14      | pcalc • DISJOIN pcalc
   15      | pcalc • DISJOIN LSPAR term RSPAR pcalc

    RSPAR     shift, and go to state 110
    PARALLEL  shift, and go to state 20
    DISJOIN   shift, and go to state 21


State 106

   10 pcalc: LBPAR IF comp RBPAR LSPAR pcalc RSPAR • PERIOD pcalc

    PERIOD  shift, and go to state 111


State 107

   44 type: btype BSLASH type •

    $default  reduce using rule 44 (type)


State 108

   11 pcalc: LBPAR NEW vdef RBPAR LSPAR pcalc RSPAR •

    $default  reduce using rule 11 (pcalc)


State 109

   12 pcalc: LBPAR VAR RBPAR LSPAR vterm RSPAR PERIOD • pcalc

    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    VAR        shift, and go to state 5

    pcalc  go to state 112


State 110

    3 prog: LBPAR DEFMACRO VAR vdef RBPAR LSPAR pcalc RSPAR • prog
    5 definitions: LBPAR DEFMACRO VAR vdef RBPAR LSPAR pcalc RSPAR • definitions
    6            | LBPAR DEFMACRO VAR vdef RBPAR LSPAR pcalc RSPAR •

    LBPAR      shift, and go to state 1
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    VAR        shift, and go to state 5

    $default  reduce using rule 6 (definitions)

    prog         go to state 113
    definitions  go to state 114
    pcalc        go to state 9


State 111

   10 pcalc: LBPAR IF comp RBPAR LSPAR pcalc RSPAR PERIOD • pcalc

    LBPAR      shift, and go to state 15
    SILENT     shift, and go to state 2
    REPLICATE  shift, and go to state 3
    STOP       shift, and go to state 4
    VAR        shift, and go to state 5

    pcalc  go to state 115


State 112

   12 pcalc: LBPAR VAR RBPAR LSPAR vterm RSPAR PERIOD pcalc •
   13      | pcalc • PARALLEL pcalc
   14      | pcalc • DISJOIN pcalc
   15      | pcalc • DISJOIN LSPAR term RSPAR pcalc

    $default  reduce using rule 12 (pcalc)


State 113

    3 prog: LBPAR DEFMACRO VAR vdef RBPAR LSPAR pcalc RSPAR prog •

    $default  reduce using rule 3 (prog)


State 114

    5 definitions: LBPAR DEFMACRO VAR vdef RBPAR LSPAR pcalc RSPAR definitions •

    $default  reduce using rule 5 (definitions)


State 115

   10 pcalc: LBPAR IF comp RBPAR LSPAR pcalc RSPAR PERIOD pcalc •
   13      | pcalc • PARALLEL pcalc
   14      | pcalc • DISJOIN pcalc
   15      | pcalc • DISJOIN LSPAR term RSPAR pcalc

    $default  reduce using rule 10 (pcalc)
