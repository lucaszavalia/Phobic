Terminals unused in grammar

    "Send"
    "Receive"
    "Probabilistic Disjunction"
    "Variable Application"
    "Macro Application"
    SIL


Grammar

    0 $accept: program "end of file"

    1 program: prog
    2        | definitions

    3 prog: "[" "def-macro" "Variable" mdef "]" "{" pcalc "}" prog
    4     | pcalc

    5 definitions: "[" "def-macro" "Variable" mdef "]" "{" pcalc "}" definitions
    6            | "[" "def-macro" "Variable" mdef "]" "{" pcalc "}"

    7 pcalc: "Variable" "<" vterm ">" "." pcalc
    8      | "Variable" "(" variableterm ")" "." pcalc
    9      | "wait" "{" term "}" "." pcalc
   10      | "Variable" "." pcalc
   11      | "[" "if" comp "]" "{" pcalc "}" "." pcalc
   12      | "[" "new" cdef "]" "{" pcalc "}"
   13      | "[" "new" cdef "]" "{" pcalc "}" "." pcalc
   14      | "[" "Variable" "]" "{" vterm "}" "." pcalc
   15      | pcalc "$" pcalc
   16      | pcalc "@" pcalc
   17      | pcalc "@" "{" term "}" pcalc
   18      | "(" pcalc ")"
   19      | "!" pcalc
   20      | "Variable" "<" vterm ">"
   21      | "Variable" "(" variableterm ")"
   22      | "wait" "{" term "}"
   23      | "stop"

   24 vterm: varterm "," vterm
   25      | varterm
   26      | ε

   27 varterm: term
   28        | pcalc

   29 variableterm: "Variable" "," variableterm
   30             | "Variable"

   31 comp: varterm "==" varterm
   32     | varterm "!=" varterm

   33 term: term "+" term
   34     | term "-" term
   35     | term "*" term
   36     | term "/" term
   37     | term "%" term
   38     | term "&" term
   39     | term "|" term
   40     | "(" term ")"
   41     | "~" term
   42     | term "++" term
   43     | terminal

   44 terminal: "Integer"
   45         | "Floating Point"
   46         | "True"
   47         | "False"
   48         | "Character Literal"
   49         | "String Literal"
   50         | "Variable"

   51 mdef: vardef "," mdef
   52     | chandef "," mdef
   53     | vardef
   54     | chandef
   55     | ε

   56 vardef: "Variable" ":" btype

   57 cdef: chandef "," cdef
   58     | chandef

   59 chandef: "Variable" ":" ":" type

   60 type: btype "\\" type
   61     | btype

   62 btype: "Int"
   63      | "Float"
   64      | "Bool"
   65      | "Char"
   66      | "String"
   67      | "Proc"


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    "<" <std::string> (258) 7 20
    ">" <std::string> (259) 7 20
    "(" <std::string> (260) 8 18 21 40
    ")" <std::string> (261) 8 18 21 40
    "[" <std::string> (262) 3 5 6 11 12 13 14
    "]" <std::string> (263) 3 5 6 11 12 13 14
    "{" <std::string> (264) 3 5 6 9 11 12 13 14 17 22
    "}" <std::string> (265) 3 5 6 9 11 12 13 14 17 22
    "." <std::string> (266) 7 8 9 10 11 13 14
    "," <std::string> (267) 24 29 51 52 57
    ":" <std::string> (268) 56 59
    "\\" <std::string> (269) 60
    "def-macro" <std::string> (270) 3 5 6
    "wait" <std::string> (271) 9 22
    "if" <std::string> (272) 11
    "new" <std::string> (273) 12 13
    "stop" <std::string> (274) 23
    "$" <std::string> (275) 15
    "@" <std::string> (276) 16 17
    "!" <std::string> (277) 19
    "+" <std::string> (278) 33
    "-" <std::string> (279) 34
    "*" <std::string> (280) 35
    "/" <std::string> (281) 36
    "%" <std::string> (282) 37
    "&" <std::string> (283) 38
    "|" <std::string> (284) 39
    "~" <std::string> (285) 41
    "++" <std::string> (286) 42
    "==" <std::string> (287) 31
    "!=" <std::string> (288) 32
    "True" <std::string> (289) 46
    "False" <std::string> (290) 47
    "Int" <std::string> (291) 62
    "Float" <std::string> (292) 63
    "Bool" <std::string> (293) 64
    "Char" <std::string> (294) 65
    "String" <std::string> (295) 66
    "Proc" <std::string> (296) 67
    "Integer" <std::string> (297) 44
    "Floating Point" <std::string> (298) 45
    "Variable" <std::string> (299) 3 5 6 7 8 10 14 20 21 29 30 50 56 59
    "Character Literal" <std::string> (300) 48
    "String Literal" <std::string> (301) 49
    "Send" (302)
    "Receive" (303)
    "Probabilistic Disjunction" (304)
    "Variable Application" (305)
    "Macro Application" (306)
    NEG (307)
    REP (308)
    SIL (309)
    SND (310)
    RCV (311)
    FAP (312)
    PDJ (313)
    IFF (314)
    VBL (315)
    WAI (316)


Nonterminals, with rules where they appear

    $accept (62)
        on left: 0
    program <Phobic::AST *> (63)
        on left: 1 2
        on right: 0
    prog <Phobic::AST *> (64)
        on left: 3 4
        on right: 1 3
    definitions <Phobic::AST *> (65)
        on left: 5 6
        on right: 2 5
    pcalc <Phobic::AST *> (66)
        on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 28
    vterm <Phobic::AST *> (67)
        on left: 24 25 26
        on right: 7 14 20 24
    varterm <Phobic::AST *> (68)
        on left: 27 28
        on right: 24 25 31 32
    variableterm <Phobic::AST *> (69)
        on left: 29 30
        on right: 8 21 29
    comp <Phobic::AST *> (70)
        on left: 31 32
        on right: 11
    term <Phobic::AST *> (71)
        on left: 33 34 35 36 37 38 39 40 41 42 43
        on right: 9 17 22 27 33 34 35 36 37 38 39 40 41 42
    terminal <Phobic::AST *> (72)
        on left: 44 45 46 47 48 49 50
        on right: 43
    mdef <Phobic::AST *> (73)
        on left: 51 52 53 54 55
        on right: 3 5 6 51 52
    vardef <Phobic::AST *> (74)
        on left: 56
        on right: 51 53
    cdef <Phobic::AST *> (75)
        on left: 57 58
        on right: 12 13 57
    chandef <Phobic::AST *> (76)
        on left: 59
        on right: 52 54 57 58
    type <Phobic::AST *> (77)
        on left: 60 61
        on right: 59 60
    btype <Phobic::AST *> (78)
        on left: 62 63 64 65 66 67
        on right: 56 60 61


State 0

    0 $accept: • program "end of file"

    "("         shift, and go to state 1
    "["         shift, and go to state 2
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    program      go to state 7
    prog         go to state 8
    definitions  go to state 9
    pcalc        go to state 10


State 1

   18 pcalc: "(" • pcalc ")"

    "("         shift, and go to state 1
    "["         shift, and go to state 11
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    pcalc  go to state 12


State 2

    3 prog: "[" • "def-macro" "Variable" mdef "]" "{" pcalc "}" prog
    5 definitions: "[" • "def-macro" "Variable" mdef "]" "{" pcalc "}" definitions
    6            | "[" • "def-macro" "Variable" mdef "]" "{" pcalc "}"
   11 pcalc: "[" • "if" comp "]" "{" pcalc "}" "." pcalc
   12      | "[" • "new" cdef "]" "{" pcalc "}"
   13      | "[" • "new" cdef "]" "{" pcalc "}" "." pcalc
   14      | "[" • "Variable" "]" "{" vterm "}" "." pcalc

    "def-macro"  shift, and go to state 13
    "if"         shift, and go to state 14
    "new"        shift, and go to state 15
    "Variable"   shift, and go to state 16


State 3

    9 pcalc: "wait" • "{" term "}" "." pcalc
   22      | "wait" • "{" term "}"

    "{"  shift, and go to state 17


State 4

   23 pcalc: "stop" •

    $default  reduce using rule 23 (pcalc)


State 5

   19 pcalc: "!" • pcalc

    "("         shift, and go to state 1
    "["         shift, and go to state 11
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    pcalc  go to state 18


State 6

    7 pcalc: "Variable" • "<" vterm ">" "." pcalc
    8      | "Variable" • "(" variableterm ")" "." pcalc
   10      | "Variable" • "." pcalc
   20      | "Variable" • "<" vterm ">"
   21      | "Variable" • "(" variableterm ")"

    "<"  shift, and go to state 19
    "("  shift, and go to state 20
    "."  shift, and go to state 21


State 7

    0 $accept: program • "end of file"

    "end of file"  shift, and go to state 22


State 8

    1 program: prog •

    $default  reduce using rule 1 (program)


State 9

    2 program: definitions •

    $default  reduce using rule 2 (program)


State 10

    4 prog: pcalc •
   15 pcalc: pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc

    "$"  shift, and go to state 23
    "@"  shift, and go to state 24

    $default  reduce using rule 4 (prog)


State 11

   11 pcalc: "[" • "if" comp "]" "{" pcalc "}" "." pcalc
   12      | "[" • "new" cdef "]" "{" pcalc "}"
   13      | "[" • "new" cdef "]" "{" pcalc "}" "." pcalc
   14      | "[" • "Variable" "]" "{" vterm "}" "." pcalc

    "if"        shift, and go to state 14
    "new"       shift, and go to state 15
    "Variable"  shift, and go to state 16


State 12

   15 pcalc: pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc
   18      | "(" pcalc • ")"

    ")"  shift, and go to state 25
    "$"  shift, and go to state 23
    "@"  shift, and go to state 24


State 13

    3 prog: "[" "def-macro" • "Variable" mdef "]" "{" pcalc "}" prog
    5 definitions: "[" "def-macro" • "Variable" mdef "]" "{" pcalc "}" definitions
    6            | "[" "def-macro" • "Variable" mdef "]" "{" pcalc "}"

    "Variable"  shift, and go to state 26


State 14

   11 pcalc: "[" "if" • comp "]" "{" pcalc "}" "." pcalc

    "("                  shift, and go to state 27
    "["                  shift, and go to state 11
    "wait"               shift, and go to state 3
    "stop"               shift, and go to state 4
    "!"                  shift, and go to state 5
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 33
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    pcalc     go to state 36
    varterm   go to state 37
    comp      go to state 38
    term      go to state 39
    terminal  go to state 40


State 15

   12 pcalc: "[" "new" • cdef "]" "{" pcalc "}"
   13      | "[" "new" • cdef "]" "{" pcalc "}" "." pcalc

    "Variable"  shift, and go to state 41

    cdef     go to state 42
    chandef  go to state 43


State 16

   14 pcalc: "[" "Variable" • "]" "{" vterm "}" "." pcalc

    "]"  shift, and go to state 44


State 17

    9 pcalc: "wait" "{" • term "}" "." pcalc
   22      | "wait" "{" • term "}"

    "("                  shift, and go to state 45
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 46
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    term      go to state 47
    terminal  go to state 40


State 18

   15 pcalc: pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc
   19      | "!" pcalc •

    $default  reduce using rule 19 (pcalc)


State 19

    7 pcalc: "Variable" "<" • vterm ">" "." pcalc
   20      | "Variable" "<" • vterm ">"

    "("                  shift, and go to state 27
    "["                  shift, and go to state 11
    "wait"               shift, and go to state 3
    "stop"               shift, and go to state 4
    "!"                  shift, and go to state 5
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 33
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    $default  reduce using rule 26 (vterm)

    pcalc     go to state 36
    vterm     go to state 48
    varterm   go to state 49
    term      go to state 39
    terminal  go to state 40


State 20

    8 pcalc: "Variable" "(" • variableterm ")" "." pcalc
   21      | "Variable" "(" • variableterm ")"

    "Variable"  shift, and go to state 50

    variableterm  go to state 51


State 21

   10 pcalc: "Variable" "." • pcalc

    "("         shift, and go to state 1
    "["         shift, and go to state 11
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    pcalc  go to state 52


State 22

    0 $accept: program "end of file" •

    $default  accept


State 23

   15 pcalc: pcalc "$" • pcalc

    "("         shift, and go to state 1
    "["         shift, and go to state 11
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    pcalc  go to state 53


State 24

   16 pcalc: pcalc "@" • pcalc
   17      | pcalc "@" • "{" term "}" pcalc

    "("         shift, and go to state 1
    "["         shift, and go to state 11
    "{"         shift, and go to state 54
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    pcalc  go to state 55


State 25

   18 pcalc: "(" pcalc ")" •

    $default  reduce using rule 18 (pcalc)


State 26

    3 prog: "[" "def-macro" "Variable" • mdef "]" "{" pcalc "}" prog
    5 definitions: "[" "def-macro" "Variable" • mdef "]" "{" pcalc "}" definitions
    6            | "[" "def-macro" "Variable" • mdef "]" "{" pcalc "}"

    "Variable"  shift, and go to state 56

    $default  reduce using rule 55 (mdef)

    mdef     go to state 57
    vardef   go to state 58
    chandef  go to state 59


State 27

   18 pcalc: "(" • pcalc ")"
   40 term: "(" • term ")"

    "("                  shift, and go to state 27
    "["                  shift, and go to state 11
    "wait"               shift, and go to state 3
    "stop"               shift, and go to state 4
    "!"                  shift, and go to state 5
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 33
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    pcalc     go to state 12
    term      go to state 60
    terminal  go to state 40


State 28

   41 term: "~" • term

    "("                  shift, and go to state 45
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 46
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    term      go to state 61
    terminal  go to state 40


State 29

   46 terminal: "True" •

    $default  reduce using rule 46 (terminal)


State 30

   47 terminal: "False" •

    $default  reduce using rule 47 (terminal)


State 31

   44 terminal: "Integer" •

    $default  reduce using rule 44 (terminal)


State 32

   45 terminal: "Floating Point" •

    $default  reduce using rule 45 (terminal)


State 33

    7 pcalc: "Variable" • "<" vterm ">" "." pcalc
    8      | "Variable" • "(" variableterm ")" "." pcalc
   10      | "Variable" • "." pcalc
   20      | "Variable" • "<" vterm ">"
   21      | "Variable" • "(" variableterm ")"
   50 terminal: "Variable" •

    "<"  shift, and go to state 19
    "("  shift, and go to state 20
    "."  shift, and go to state 21

    $default  reduce using rule 50 (terminal)


State 34

   48 terminal: "Character Literal" •

    $default  reduce using rule 48 (terminal)


State 35

   49 terminal: "String Literal" •

    $default  reduce using rule 49 (terminal)


State 36

   15 pcalc: pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc
   28 varterm: pcalc •

    "$"  shift, and go to state 23
    "@"  shift, and go to state 24

    $default  reduce using rule 28 (varterm)


State 37

   31 comp: varterm • "==" varterm
   32     | varterm • "!=" varterm

    "=="  shift, and go to state 62
    "!="  shift, and go to state 63


State 38

   11 pcalc: "[" "if" comp • "]" "{" pcalc "}" "." pcalc

    "]"  shift, and go to state 64


State 39

   27 varterm: term •
   33 term: term • "+" term
   34     | term • "-" term
   35     | term • "*" term
   36     | term • "/" term
   37     | term • "%" term
   38     | term • "&" term
   39     | term • "|" term
   42     | term • "++" term

    "+"   shift, and go to state 65
    "-"   shift, and go to state 66
    "*"   shift, and go to state 67
    "/"   shift, and go to state 68
    "%"   shift, and go to state 69
    "&"   shift, and go to state 70
    "|"   shift, and go to state 71
    "++"  shift, and go to state 72

    $default  reduce using rule 27 (varterm)


State 40

   43 term: terminal •

    $default  reduce using rule 43 (term)


State 41

   59 chandef: "Variable" • ":" ":" type

    ":"  shift, and go to state 73


State 42

   12 pcalc: "[" "new" cdef • "]" "{" pcalc "}"
   13      | "[" "new" cdef • "]" "{" pcalc "}" "." pcalc

    "]"  shift, and go to state 74


State 43

   57 cdef: chandef • "," cdef
   58     | chandef •

    ","  shift, and go to state 75

    $default  reduce using rule 58 (cdef)


State 44

   14 pcalc: "[" "Variable" "]" • "{" vterm "}" "." pcalc

    "{"  shift, and go to state 76


State 45

   40 term: "(" • term ")"

    "("                  shift, and go to state 45
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 46
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    term      go to state 60
    terminal  go to state 40


State 46

   50 terminal: "Variable" •

    $default  reduce using rule 50 (terminal)


State 47

    9 pcalc: "wait" "{" term • "}" "." pcalc
   22      | "wait" "{" term • "}"
   33 term: term • "+" term
   34     | term • "-" term
   35     | term • "*" term
   36     | term • "/" term
   37     | term • "%" term
   38     | term • "&" term
   39     | term • "|" term
   42     | term • "++" term

    "}"   shift, and go to state 77
    "+"   shift, and go to state 65
    "-"   shift, and go to state 66
    "*"   shift, and go to state 67
    "/"   shift, and go to state 68
    "%"   shift, and go to state 69
    "&"   shift, and go to state 70
    "|"   shift, and go to state 71
    "++"  shift, and go to state 72


State 48

    7 pcalc: "Variable" "<" vterm • ">" "." pcalc
   20      | "Variable" "<" vterm • ">"

    ">"  shift, and go to state 78


State 49

   24 vterm: varterm • "," vterm
   25      | varterm •

    ","  shift, and go to state 79

    $default  reduce using rule 25 (vterm)


State 50

   29 variableterm: "Variable" • "," variableterm
   30             | "Variable" •

    ","  shift, and go to state 80

    $default  reduce using rule 30 (variableterm)


State 51

    8 pcalc: "Variable" "(" variableterm • ")" "." pcalc
   21      | "Variable" "(" variableterm • ")"

    ")"  shift, and go to state 81


State 52

   10 pcalc: "Variable" "." pcalc •
   15      | pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc

    $default  reduce using rule 10 (pcalc)


State 53

   15 pcalc: pcalc • "$" pcalc
   15      | pcalc "$" pcalc •
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc

    "@"  shift, and go to state 24

    $default  reduce using rule 15 (pcalc)


State 54

   17 pcalc: pcalc "@" "{" • term "}" pcalc

    "("                  shift, and go to state 45
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 46
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    term      go to state 82
    terminal  go to state 40


State 55

   15 pcalc: pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   16      | pcalc "@" pcalc •
   17      | pcalc • "@" "{" term "}" pcalc

    $default  reduce using rule 16 (pcalc)


State 56

   56 vardef: "Variable" • ":" btype
   59 chandef: "Variable" • ":" ":" type

    ":"  shift, and go to state 83


State 57

    3 prog: "[" "def-macro" "Variable" mdef • "]" "{" pcalc "}" prog
    5 definitions: "[" "def-macro" "Variable" mdef • "]" "{" pcalc "}" definitions
    6            | "[" "def-macro" "Variable" mdef • "]" "{" pcalc "}"

    "]"  shift, and go to state 84


State 58

   51 mdef: vardef • "," mdef
   53     | vardef •

    ","  shift, and go to state 85

    $default  reduce using rule 53 (mdef)


State 59

   52 mdef: chandef • "," mdef
   54     | chandef •

    ","  shift, and go to state 86

    $default  reduce using rule 54 (mdef)


State 60

   33 term: term • "+" term
   34     | term • "-" term
   35     | term • "*" term
   36     | term • "/" term
   37     | term • "%" term
   38     | term • "&" term
   39     | term • "|" term
   40     | "(" term • ")"
   42     | term • "++" term

    ")"   shift, and go to state 87
    "+"   shift, and go to state 65
    "-"   shift, and go to state 66
    "*"   shift, and go to state 67
    "/"   shift, and go to state 68
    "%"   shift, and go to state 69
    "&"   shift, and go to state 70
    "|"   shift, and go to state 71
    "++"  shift, and go to state 72


State 61

   33 term: term • "+" term
   34     | term • "-" term
   35     | term • "*" term
   36     | term • "/" term
   37     | term • "%" term
   38     | term • "&" term
   39     | term • "|" term
   41     | "~" term •
   42     | term • "++" term

    $default  reduce using rule 41 (term)


State 62

   31 comp: varterm "==" • varterm

    "("                  shift, and go to state 27
    "["                  shift, and go to state 11
    "wait"               shift, and go to state 3
    "stop"               shift, and go to state 4
    "!"                  shift, and go to state 5
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 33
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    pcalc     go to state 36
    varterm   go to state 88
    term      go to state 39
    terminal  go to state 40


State 63

   32 comp: varterm "!=" • varterm

    "("                  shift, and go to state 27
    "["                  shift, and go to state 11
    "wait"               shift, and go to state 3
    "stop"               shift, and go to state 4
    "!"                  shift, and go to state 5
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 33
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    pcalc     go to state 36
    varterm   go to state 89
    term      go to state 39
    terminal  go to state 40


State 64

   11 pcalc: "[" "if" comp "]" • "{" pcalc "}" "." pcalc

    "{"  shift, and go to state 90


State 65

   33 term: term "+" • term

    "("                  shift, and go to state 45
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 46
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    term      go to state 91
    terminal  go to state 40


State 66

   34 term: term "-" • term

    "("                  shift, and go to state 45
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 46
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    term      go to state 92
    terminal  go to state 40


State 67

   35 term: term "*" • term

    "("                  shift, and go to state 45
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 46
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    term      go to state 93
    terminal  go to state 40


State 68

   36 term: term "/" • term

    "("                  shift, and go to state 45
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 46
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    term      go to state 94
    terminal  go to state 40


State 69

   37 term: term "%" • term

    "("                  shift, and go to state 45
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 46
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    term      go to state 95
    terminal  go to state 40


State 70

   38 term: term "&" • term

    "("                  shift, and go to state 45
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 46
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    term      go to state 96
    terminal  go to state 40


State 71

   39 term: term "|" • term

    "("                  shift, and go to state 45
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 46
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    term      go to state 97
    terminal  go to state 40


State 72

   42 term: term "++" • term

    "("                  shift, and go to state 45
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 46
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    term      go to state 98
    terminal  go to state 40


State 73

   59 chandef: "Variable" ":" • ":" type

    ":"  shift, and go to state 99


State 74

   12 pcalc: "[" "new" cdef "]" • "{" pcalc "}"
   13      | "[" "new" cdef "]" • "{" pcalc "}" "." pcalc

    "{"  shift, and go to state 100


State 75

   57 cdef: chandef "," • cdef

    "Variable"  shift, and go to state 41

    cdef     go to state 101
    chandef  go to state 43


State 76

   14 pcalc: "[" "Variable" "]" "{" • vterm "}" "." pcalc

    "("                  shift, and go to state 27
    "["                  shift, and go to state 11
    "wait"               shift, and go to state 3
    "stop"               shift, and go to state 4
    "!"                  shift, and go to state 5
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 33
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    $default  reduce using rule 26 (vterm)

    pcalc     go to state 36
    vterm     go to state 102
    varterm   go to state 49
    term      go to state 39
    terminal  go to state 40


State 77

    9 pcalc: "wait" "{" term "}" • "." pcalc
   22      | "wait" "{" term "}" •

    "."  shift, and go to state 103

    $default  reduce using rule 22 (pcalc)


State 78

    7 pcalc: "Variable" "<" vterm ">" • "." pcalc
   20      | "Variable" "<" vterm ">" •

    "."  shift, and go to state 104

    $default  reduce using rule 20 (pcalc)


State 79

   24 vterm: varterm "," • vterm

    "("                  shift, and go to state 27
    "["                  shift, and go to state 11
    "wait"               shift, and go to state 3
    "stop"               shift, and go to state 4
    "!"                  shift, and go to state 5
    "~"                  shift, and go to state 28
    "True"               shift, and go to state 29
    "False"              shift, and go to state 30
    "Integer"            shift, and go to state 31
    "Floating Point"     shift, and go to state 32
    "Variable"           shift, and go to state 33
    "Character Literal"  shift, and go to state 34
    "String Literal"     shift, and go to state 35

    $default  reduce using rule 26 (vterm)

    pcalc     go to state 36
    vterm     go to state 105
    varterm   go to state 49
    term      go to state 39
    terminal  go to state 40


State 80

   29 variableterm: "Variable" "," • variableterm

    "Variable"  shift, and go to state 50

    variableterm  go to state 106


State 81

    8 pcalc: "Variable" "(" variableterm ")" • "." pcalc
   21      | "Variable" "(" variableterm ")" •

    "."  shift, and go to state 107

    $default  reduce using rule 21 (pcalc)


State 82

   17 pcalc: pcalc "@" "{" term • "}" pcalc
   33 term: term • "+" term
   34     | term • "-" term
   35     | term • "*" term
   36     | term • "/" term
   37     | term • "%" term
   38     | term • "&" term
   39     | term • "|" term
   42     | term • "++" term

    "}"   shift, and go to state 108
    "+"   shift, and go to state 65
    "-"   shift, and go to state 66
    "*"   shift, and go to state 67
    "/"   shift, and go to state 68
    "%"   shift, and go to state 69
    "&"   shift, and go to state 70
    "|"   shift, and go to state 71
    "++"  shift, and go to state 72


State 83

   56 vardef: "Variable" ":" • btype
   59 chandef: "Variable" ":" • ":" type

    ":"       shift, and go to state 99
    "Int"     shift, and go to state 109
    "Float"   shift, and go to state 110
    "Bool"    shift, and go to state 111
    "Char"    shift, and go to state 112
    "String"  shift, and go to state 113
    "Proc"    shift, and go to state 114

    btype  go to state 115


State 84

    3 prog: "[" "def-macro" "Variable" mdef "]" • "{" pcalc "}" prog
    5 definitions: "[" "def-macro" "Variable" mdef "]" • "{" pcalc "}" definitions
    6            | "[" "def-macro" "Variable" mdef "]" • "{" pcalc "}"

    "{"  shift, and go to state 116


State 85

   51 mdef: vardef "," • mdef

    "Variable"  shift, and go to state 56

    $default  reduce using rule 55 (mdef)

    mdef     go to state 117
    vardef   go to state 58
    chandef  go to state 59


State 86

   52 mdef: chandef "," • mdef

    "Variable"  shift, and go to state 56

    $default  reduce using rule 55 (mdef)

    mdef     go to state 118
    vardef   go to state 58
    chandef  go to state 59


State 87

   40 term: "(" term ")" •

    $default  reduce using rule 40 (term)


State 88

   31 comp: varterm "==" varterm •

    $default  reduce using rule 31 (comp)


State 89

   32 comp: varterm "!=" varterm •

    $default  reduce using rule 32 (comp)


State 90

   11 pcalc: "[" "if" comp "]" "{" • pcalc "}" "." pcalc

    "("         shift, and go to state 1
    "["         shift, and go to state 11
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    pcalc  go to state 119


State 91

   33 term: term • "+" term
   33     | term "+" term •
   34     | term • "-" term
   35     | term • "*" term
   36     | term • "/" term
   37     | term • "%" term
   38     | term • "&" term
   39     | term • "|" term
   42     | term • "++" term

    "-"   shift, and go to state 66
    "*"   shift, and go to state 67
    "/"   shift, and go to state 68
    "%"   shift, and go to state 69
    "&"   shift, and go to state 70
    "|"   shift, and go to state 71
    "++"  shift, and go to state 72

    $default  reduce using rule 33 (term)


State 92

   33 term: term • "+" term
   34     | term • "-" term
   34     | term "-" term •
   35     | term • "*" term
   36     | term • "/" term
   37     | term • "%" term
   38     | term • "&" term
   39     | term • "|" term
   42     | term • "++" term

    "*"   shift, and go to state 67
    "/"   shift, and go to state 68
    "%"   shift, and go to state 69
    "&"   shift, and go to state 70
    "|"   shift, and go to state 71
    "++"  shift, and go to state 72

    $default  reduce using rule 34 (term)


State 93

   33 term: term • "+" term
   34     | term • "-" term
   35     | term • "*" term
   35     | term "*" term •
   36     | term • "/" term
   37     | term • "%" term
   38     | term • "&" term
   39     | term • "|" term
   42     | term • "++" term

    "/"   shift, and go to state 68
    "%"   shift, and go to state 69
    "&"   shift, and go to state 70
    "|"   shift, and go to state 71
    "++"  shift, and go to state 72

    $default  reduce using rule 35 (term)


State 94

   33 term: term • "+" term
   34     | term • "-" term
   35     | term • "*" term
   36     | term • "/" term
   36     | term "/" term •
   37     | term • "%" term
   38     | term • "&" term
   39     | term • "|" term
   42     | term • "++" term

    "%"   shift, and go to state 69
    "&"   shift, and go to state 70
    "|"   shift, and go to state 71
    "++"  shift, and go to state 72

    $default  reduce using rule 36 (term)


State 95

   33 term: term • "+" term
   34     | term • "-" term
   35     | term • "*" term
   36     | term • "/" term
   37     | term • "%" term
   37     | term "%" term •
   38     | term • "&" term
   39     | term • "|" term
   42     | term • "++" term

    "&"   shift, and go to state 70
    "|"   shift, and go to state 71
    "++"  shift, and go to state 72

    $default  reduce using rule 37 (term)


State 96

   33 term: term • "+" term
   34     | term • "-" term
   35     | term • "*" term
   36     | term • "/" term
   37     | term • "%" term
   38     | term • "&" term
   38     | term "&" term •
   39     | term • "|" term
   42     | term • "++" term

    "|"   shift, and go to state 71
    "++"  shift, and go to state 72

    $default  reduce using rule 38 (term)


State 97

   33 term: term • "+" term
   34     | term • "-" term
   35     | term • "*" term
   36     | term • "/" term
   37     | term • "%" term
   38     | term • "&" term
   39     | term • "|" term
   39     | term "|" term •
   42     | term • "++" term

    "++"  shift, and go to state 72

    $default  reduce using rule 39 (term)


State 98

   33 term: term • "+" term
   34     | term • "-" term
   35     | term • "*" term
   36     | term • "/" term
   37     | term • "%" term
   38     | term • "&" term
   39     | term • "|" term
   42     | term • "++" term
   42     | term "++" term •

    $default  reduce using rule 42 (term)


State 99

   59 chandef: "Variable" ":" ":" • type

    "Int"     shift, and go to state 109
    "Float"   shift, and go to state 110
    "Bool"    shift, and go to state 111
    "Char"    shift, and go to state 112
    "String"  shift, and go to state 113
    "Proc"    shift, and go to state 114

    type   go to state 120
    btype  go to state 121


State 100

   12 pcalc: "[" "new" cdef "]" "{" • pcalc "}"
   13      | "[" "new" cdef "]" "{" • pcalc "}" "." pcalc

    "("         shift, and go to state 1
    "["         shift, and go to state 11
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    pcalc  go to state 122


State 101

   57 cdef: chandef "," cdef •

    $default  reduce using rule 57 (cdef)


State 102

   14 pcalc: "[" "Variable" "]" "{" vterm • "}" "." pcalc

    "}"  shift, and go to state 123


State 103

    9 pcalc: "wait" "{" term "}" "." • pcalc

    "("         shift, and go to state 1
    "["         shift, and go to state 11
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    pcalc  go to state 124


State 104

    7 pcalc: "Variable" "<" vterm ">" "." • pcalc

    "("         shift, and go to state 1
    "["         shift, and go to state 11
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    pcalc  go to state 125


State 105

   24 vterm: varterm "," vterm •

    $default  reduce using rule 24 (vterm)


State 106

   29 variableterm: "Variable" "," variableterm •

    $default  reduce using rule 29 (variableterm)


State 107

    8 pcalc: "Variable" "(" variableterm ")" "." • pcalc

    "("         shift, and go to state 1
    "["         shift, and go to state 11
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    pcalc  go to state 126


State 108

   17 pcalc: pcalc "@" "{" term "}" • pcalc

    "("         shift, and go to state 1
    "["         shift, and go to state 11
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    pcalc  go to state 127


State 109

   62 btype: "Int" •

    $default  reduce using rule 62 (btype)


State 110

   63 btype: "Float" •

    $default  reduce using rule 63 (btype)


State 111

   64 btype: "Bool" •

    $default  reduce using rule 64 (btype)


State 112

   65 btype: "Char" •

    $default  reduce using rule 65 (btype)


State 113

   66 btype: "String" •

    $default  reduce using rule 66 (btype)


State 114

   67 btype: "Proc" •

    $default  reduce using rule 67 (btype)


State 115

   56 vardef: "Variable" ":" btype •

    $default  reduce using rule 56 (vardef)


State 116

    3 prog: "[" "def-macro" "Variable" mdef "]" "{" • pcalc "}" prog
    5 definitions: "[" "def-macro" "Variable" mdef "]" "{" • pcalc "}" definitions
    6            | "[" "def-macro" "Variable" mdef "]" "{" • pcalc "}"

    "("         shift, and go to state 1
    "["         shift, and go to state 11
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    pcalc  go to state 128


State 117

   51 mdef: vardef "," mdef •

    $default  reduce using rule 51 (mdef)


State 118

   52 mdef: chandef "," mdef •

    $default  reduce using rule 52 (mdef)


State 119

   11 pcalc: "[" "if" comp "]" "{" pcalc • "}" "." pcalc
   15      | pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc

    "}"  shift, and go to state 129
    "$"  shift, and go to state 23
    "@"  shift, and go to state 24


State 120

   59 chandef: "Variable" ":" ":" type •

    $default  reduce using rule 59 (chandef)


State 121

   60 type: btype • "\\" type
   61     | btype •

    "\\"  shift, and go to state 130

    $default  reduce using rule 61 (type)


State 122

   12 pcalc: "[" "new" cdef "]" "{" pcalc • "}"
   13      | "[" "new" cdef "]" "{" pcalc • "}" "." pcalc
   15      | pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc

    "}"  shift, and go to state 131
    "$"  shift, and go to state 23
    "@"  shift, and go to state 24


State 123

   14 pcalc: "[" "Variable" "]" "{" vterm "}" • "." pcalc

    "."  shift, and go to state 132


State 124

    9 pcalc: "wait" "{" term "}" "." pcalc •
   15      | pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc

    $default  reduce using rule 9 (pcalc)


State 125

    7 pcalc: "Variable" "<" vterm ">" "." pcalc •
   15      | pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc

    $default  reduce using rule 7 (pcalc)


State 126

    8 pcalc: "Variable" "(" variableterm ")" "." pcalc •
   15      | pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc

    $default  reduce using rule 8 (pcalc)


State 127

   15 pcalc: pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc
   17      | pcalc "@" "{" term "}" pcalc •

    $default  reduce using rule 17 (pcalc)


State 128

    3 prog: "[" "def-macro" "Variable" mdef "]" "{" pcalc • "}" prog
    5 definitions: "[" "def-macro" "Variable" mdef "]" "{" pcalc • "}" definitions
    6            | "[" "def-macro" "Variable" mdef "]" "{" pcalc • "}"
   15 pcalc: pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc

    "}"  shift, and go to state 133
    "$"  shift, and go to state 23
    "@"  shift, and go to state 24


State 129

   11 pcalc: "[" "if" comp "]" "{" pcalc "}" • "." pcalc

    "."  shift, and go to state 134


State 130

   60 type: btype "\\" • type

    "Int"     shift, and go to state 109
    "Float"   shift, and go to state 110
    "Bool"    shift, and go to state 111
    "Char"    shift, and go to state 112
    "String"  shift, and go to state 113
    "Proc"    shift, and go to state 114

    type   go to state 135
    btype  go to state 121


State 131

   12 pcalc: "[" "new" cdef "]" "{" pcalc "}" •
   13      | "[" "new" cdef "]" "{" pcalc "}" • "." pcalc

    "."  shift, and go to state 136

    $default  reduce using rule 12 (pcalc)


State 132

   14 pcalc: "[" "Variable" "]" "{" vterm "}" "." • pcalc

    "("         shift, and go to state 1
    "["         shift, and go to state 11
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    pcalc  go to state 137


State 133

    3 prog: "[" "def-macro" "Variable" mdef "]" "{" pcalc "}" • prog
    5 definitions: "[" "def-macro" "Variable" mdef "]" "{" pcalc "}" • definitions
    6            | "[" "def-macro" "Variable" mdef "]" "{" pcalc "}" •

    "("         shift, and go to state 1
    "["         shift, and go to state 2
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    $default  reduce using rule 6 (definitions)

    prog         go to state 138
    definitions  go to state 139
    pcalc        go to state 10


State 134

   11 pcalc: "[" "if" comp "]" "{" pcalc "}" "." • pcalc

    "("         shift, and go to state 1
    "["         shift, and go to state 11
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    pcalc  go to state 140


State 135

   60 type: btype "\\" type •

    $default  reduce using rule 60 (type)


State 136

   13 pcalc: "[" "new" cdef "]" "{" pcalc "}" "." • pcalc

    "("         shift, and go to state 1
    "["         shift, and go to state 11
    "wait"      shift, and go to state 3
    "stop"      shift, and go to state 4
    "!"         shift, and go to state 5
    "Variable"  shift, and go to state 6

    pcalc  go to state 141


State 137

   14 pcalc: "[" "Variable" "]" "{" vterm "}" "." pcalc •
   15      | pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc

    $default  reduce using rule 14 (pcalc)


State 138

    3 prog: "[" "def-macro" "Variable" mdef "]" "{" pcalc "}" prog •

    $default  reduce using rule 3 (prog)


State 139

    5 definitions: "[" "def-macro" "Variable" mdef "]" "{" pcalc "}" definitions •

    $default  reduce using rule 5 (definitions)


State 140

   11 pcalc: "[" "if" comp "]" "{" pcalc "}" "." pcalc •
   15      | pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc

    $default  reduce using rule 11 (pcalc)


State 141

   13 pcalc: "[" "new" cdef "]" "{" pcalc "}" "." pcalc •
   15      | pcalc • "$" pcalc
   16      | pcalc • "@" pcalc
   17      | pcalc • "@" "{" term "}" pcalc

    $default  reduce using rule 13 (pcalc)
